#
- platform: time_date
  display_options:
    - 'time'
    - 'date'
#
- platform: uptime
  unit_of_measurement: minutes
#
- platform: dnsip
#
- platform: feedparser
  name: "Torrentday BluRay"
  feed_url: !secret torrentday_rss
#
- platform: systemmonitor
  resources:
  - type: disk_use_percent
    arg: /home
  - type: memory_use
  - type: load_1m

#########################################
#
- platform: history_stats
  name: poolpump_duration
  entity_id: switch.pool_pump
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
#
- platform: template
  sensors:
    poolpump_duration_today:
      value_template: "{{ (states('sensor.poolpump_duration') | float * 60) | round(0) }}"
      unit_of_measurement: "minutes"
    poolpump_duration_now:
      value_template: "{{ ((now().timestamp() - as_timestamp(states.switch.pool_pump.last_changed)) / 60) | int if is_state('switch.pool_pump', 'on') else 0 }}"
      unit_of_measurement: "minutes"
    geyser_duration_now:
      value_template: "{{ ((now().timestamp() - as_timestamp(states.switch.geyser.last_changed)) / 60) | int if is_state('switch.geyser', 'on') else 0 }}"
      unit_of_measurement: "minutes"
    axpert_charge_w:
      value_template: "{{ (states('sensor.axpert_battchargea') | int * states('sensor.axpert_sccbattv') | float) | round(0) }}"
      unit_of_measurement: "W"
      device_class: power
    axpert_discharge_w:
      value_template: "{{ (states('sensor.axpert_battdischargea') | int * states('sensor.axpert_battv') | float) | round(0) }}"
      unit_of_measurement: "W"
      device_class: power
    axpert_source:
      value_template: >-
        {%- if is_state('binary_sensor.axpert_has_solar', 'off') and states('sensor.axpert_battdischargea') | int > 0 -%}
          Battery
        {%- elif is_state('binary_sensor.axpert_has_solar', 'on') and states('sensor.axpert_battdischargea') | int > 0 -%}
          Solar + Battery
        {%- elif is_state('binary_sensor.axpert_output_source_is_grid', 'on') -%}
          Grid (set {{states('sensor.axpert_output_source') }})
        {%- elif is_state('binary_sensor.axpert_has_solar', 'on') and states('sensor.axpert_pvw') | int  > 0 -%}
          Solar (set {{states('sensor.axpert_output_source') }})
        {%- else -%}
          Unknown
        {%- endif -%}
    alarm_arm_mode:
      value_template: >-
        {%- if is_state('binary_sensor.alarm_status', 'on') and is_state('input_boolean.alarm_mode_stay', 'on') -%}
          Stay
        {%- elif is_state('binary_sensor.alarm_status', 'on') -%}
          Armed
        {%- else -%}
          Disarmed
        {%- endif -%}
#########################################
- platform: sql
  db_url: !secret mysql_db_url
  queries:
  - name: database_size
    query: "SELECT round(sum(data_length + index_length) / 1024 / 1024, 2) AS disk_size FROM information_schema.tables WHERE table_schema='homeassistant'"
    column: 'disk_size'
    unit_of_measurement: "MB"
#########################################
#
- platform: mqtt
  name: axpert_output_source
  state_topic: "axpert/info/piri"
  value_template: '{{ value_json.os }}'
#
- platform: mqtt
  name: axpert_charge_source
  state_topic: "axpert/info/piri"
  value_template: '{{ value_json.cs }}'
#
- platform: mqtt
  name: axpert_inv
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.inV }}'
  unit_of_measurement: "V"
#
- platform: mqtt
  name: axpert_outva
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.outVa }}'
  unit_of_measurement: "VA"
#
- platform: mqtt
  name: axpert_outw
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.outW }}'
  unit_of_measurement: "W"
  device_class: power
  expire_after: 20
#
- platform: mqtt
  name: axpert_outp
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.outP }}'
  unit_of_measurement: "%"
#
- platform: mqtt
  name: axpert_battv
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.battV }}'
  unit_of_measurement: "V"
#
- platform: mqtt
  name: axpert_battchargea
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.battAi }}'
  unit_of_measurement: "A"
#
- platform: mqtt
  name: axpert_battdischargea
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.battAo }}'
  unit_of_measurement: "A"
#
- platform: mqtt
  name: axpert_battp
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.battP }}'
  unit_of_measurement: "%"
  device_class: battery
#
- platform: mqtt
  name: axpert_heatsinktemp
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.temp }}'
  unit_of_measurement: "°C"
  device_class: temperature
#
- platform: mqtt
  name: axpert_pva
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.pvA }}'
  unit_of_measurement: "A"
#
- platform: mqtt
  name: axpert_pvv
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.pvV }}'
  unit_of_measurement: "V"
#
- platform: mqtt
  name: axpert_pvw
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.pvW }}'
  unit_of_measurement: "W"
  device_class: power
  force_update: true
#
- platform: mqtt
  name: axpert_pvva
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.pvVa }}'
  unit_of_measurement: "VA"
#
- platform: mqtt
  name: axpert_sccbattv
  state_topic: "axpert/info/pigs"
  value_template: '{{ value_json.sccBattV }}'
  unit_of_measurement: "V"
#
- platform: mqtt
  name: axpert_power_output
  state_topic: "axpert/info/power/outw"
  value_template: "{{ value_json.total }}"
  json_attributes_topic: "axpert/info/power/outw"
  unit_of_measurement: "kWh"
  device_class: power
#
- platform: mqtt
  name: axpert_power_solar
  state_topic: "axpert/info/power/pvw"
  value_template: "{{ value_json.total }}"
  json_attributes_topic: "axpert/info/power/pvw"
  unit_of_measurement: "kWh"
  device_class: power
#
#########################################
- platform: mqtt
  name: smart_plug_1_power
  state_topic: "tele/plug1/SENSOR"
  value_template: "{{ value_json.ENERGY.Power }}"
  json_attributes_topic: "tele/plug1/SENSOR"
  json_attributes_template: "{{ value_json.ENERGY | tojson }}"
  unit_of_measurement: "W"
  device_class: power
#
- platform: mqtt
  name: smart_plug_2_power
  state_topic: "tele/plug2/SENSOR"
  value_template: "{{ value_json.ENERGY.Power }}"
  json_attributes_topic: "tele/plug2/SENSOR"
  json_attributes_template: "{{ value_json.ENERGY | tojson }}"
  unit_of_measurement: "W"
  device_class: power
#
#########################################
- platform: mqtt
  name: prepaid_power_reading
  state_topic: "ha/e/power"
  unit_of_measurement: "Wh"
  device_class: power
#
# updated from automation mqtt publish
- platform: mqtt
  name: stats_poolpump_duration
  state_topic: "ha/internal/stats_poolpump_duration"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: stats_power_output
  state_topic: "ha/internal/stats_power_output"
  unit_of_measurement: "kWh"
#
- platform: mqtt
  name: stats_power_solar
  state_topic: "ha/internal/stats_power_solar"
  unit_of_measurement: "kWh"
#
- platform: mqtt
  name: stats_power_output_hourly
  state_topic: "ha/internal/stats_power_output_hourly"
  unit_of_measurement: "Wh"
#
- platform: mqtt
  name: stats_power_solar_hourly
  state_topic: "ha/internal/stats_power_solar_hourly"
  unit_of_measurement: "Wh"
#
#########################################
- platform: mqtt
  name: node_up_rb01
  expire_after: 90
  state_topic: "ha/s/up/rb1"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_rb02
  expire_after: 90
  state_topic: "ha/s/up/rb2"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_rb03
  expire_after: 90
  state_topic: "ha/s/up/rb3"
  unit_of_measurement: "minutes"
######################
- platform: mqtt
  name: node_up_sw01
  expire_after: 90
  state_topic: "ha/s/up/sw1"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_sw02
  expire_after: 90
  state_topic: "ha/s/up/sw2"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_sw03
  expire_after: 90
  state_topic: "ha/s/up/sw3"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_sw04
  expire_after: 90
  state_topic: "ha/s/up/sw4"
  unit_of_measurement: "minutes"
######################
- platform: mqtt
  name: node_up_dev01
  expire_after: 90
  state_topic: "ha/s/up/d01"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_dev02
  expire_after: 90
  state_topic: "ha/s/up/d02"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_dev03
  expire_after: 90
  state_topic: "ha/s/up/d03"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_dev04
  expire_after: 90
  state_topic: "ha/s/up/d04"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_dev05
  expire_after: 90
  state_topic: "ha/s/up/d05"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_dev06
  expire_after: 90
  state_topic: "ha/s/up/d06"
  unit_of_measurement: "minutes"
#
- platform: mqtt
  name: node_up_dev09
  expire_after: 90
  state_topic: "ha/s/up/d09"
  unit_of_measurement: "minutes"
#
#########################################
- platform: mqtt
  name: house_temperature
  state_topic: "tele/blah/SENSOR"
  value_template: '{{ value_json.BME280.Temperature }}'
  unit_of_measurement: "°C"
  device_class: temperature
#
- platform: mqtt
  name: house_humidity
  state_topic: "tele/blah/SENSOR"
  value_template: '{{ value_json.BME280.Humidity }}'
  unit_of_measurement: "%"
  device_class: humidity
#
- platform: mqtt
  name: house_pressure
  state_topic: "tele/blah/SENSOR"
  value_template: '{{ value_json.BME280.Pressure }}'
  unit_of_measurement: "hPa"
  device_class: pressure
############################
- platform: mqtt
  name: garage_temperature
  state_topic: "ha/s/wi/d02"
  value_template: '{{ value_json.t }}'
  unit_of_measurement: "°C"
  device_class: temperature
#
- platform: mqtt
  name: garage_humidity
  state_topic: "ha/s/wi/d02"
  value_template: '{{ value_json.h }}'
  unit_of_measurement: "%"
  device_class: humidity
#
- platform: mqtt
  name: garage_pressure
  state_topic: "ha/s/wi/d02"
  value_template: '{{ value_json.p }}'
  unit_of_measurement: "hPa"
  device_class: pressure
############################
- platform: mqtt
  name: poolbox_temperature
  state_topic: "ha/s/wi/d04"
  value_template: '{{ value_json.t }}'
  unit_of_measurement: "°C"
  device_class: temperature
#
- platform: mqtt
  name: poolbox_humidity
  state_topic: "ha/s/wi/d04"
  value_template: '{{ value_json.h }}'
  unit_of_measurement: "%"
  device_class: humidity
#
- platform: mqtt
  name: poolbox_pressure
  state_topic: "ha/s/wi/d04"
  value_template: '{{ value_json.p }}'
  unit_of_measurement: "hPa"
  device_class: pressure
#
#########################################
- platform: otp
  name: otp_bitstamp
  token: !secret otp_bitstamp
#
- platform: otp
  name: otp_nicehash
  token: !secret otp_nicehash
#
- platform: otp
  name: otp_luno
  token: !secret otp_luno
#
- platform: otp
  name: otp_altcointrader
  token: !secret otp_altcointrader
#
- platform: otp
  name: otp_discord
  token: !secret otp_discord
#
- platform: otp
  name: otp_coinbase
  token: !secret otp_coinbase
#########################################
- platform: apcupsd
  resources:
  - bcharge
  - loadpct
  - numxfers
  - status
  - timeleft
  - tonbatt
#########################################